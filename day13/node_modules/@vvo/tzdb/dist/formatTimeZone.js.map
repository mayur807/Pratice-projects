{"version":3,"file":"formatTimeZone.js","names":["format","alternativeName","mainCities","rawOffsetInMinutes","currentTimeOffsetInMinutes","useCurrentOffset","offsetInHours","getOffsetString","padStart","join","offsetInMinutes","absOffsetInMinutes","Math","abs","hours","minutes","floor","map","v","toString","durationInHoursMinutes"],"sources":["../lib/formatTimeZone.js"],"sourcesContent":["export default function format(\n  {\n    alternativeName,\n    mainCities,\n    rawOffsetInMinutes,\n    currentTimeOffsetInMinutes,\n  },\n  { useCurrentOffset = false } = {},\n) {\n  const offsetInHours = useCurrentOffset\n    ? getOffsetString(currentTimeOffsetInMinutes)\n    : getOffsetString(rawOffsetInMinutes);\n\n  return `${offsetInHours.padStart(\n    6,\n    \"+\",\n  )} ${alternativeName} - ${mainCities.join(\", \")}`;\n}\n\nfunction getOffsetString(offsetInMinutes) {\n  const absOffsetInMinutes = Math.abs(offsetInMinutes);\n  const [hours, minutes] = [\n    Math.floor(absOffsetInMinutes / 60),\n    absOffsetInMinutes % 60,\n  ].map((v) => {\n    return v.toString().padStart(2, \"0\");\n  });\n  const durationInHoursMinutes = `${hours}:${minutes}`;\n\n  return `${offsetInMinutes >= 0 ? \"+\" : \"-\"}${durationInHoursMinutes}`;\n}\n"],"mappings":";;;;;;AAAe,SAASA,MAAMA,CAC5B;EACEC,eAAe;EACfC,UAAU;EACVC,kBAAkB;EAClBC;AACF,CAAC,EACD;EAAEC,gBAAgB,GAAG;AAAM,CAAC,GAAG,CAAC,CAAC,EACjC;EACA,MAAMC,aAAa,GAAGD,gBAAgB,GAClCE,eAAe,CAACH,0BAA0B,CAAC,GAC3CG,eAAe,CAACJ,kBAAkB,CAAC;EAEvC,OAAO,GAAGG,aAAa,CAACE,QAAQ,CAC9B,CAAC,EACD,GACF,CAAC,IAAIP,eAAe,MAAMC,UAAU,CAACO,IAAI,CAAC,IAAI,CAAC,EAAE;AACnD;AAEA,SAASF,eAAeA,CAACG,eAAe,EAAE;EACxC,MAAMC,kBAAkB,GAAGC,IAAI,CAACC,GAAG,CAACH,eAAe,CAAC;EACpD,MAAM,CAACI,KAAK,EAAEC,OAAO,CAAC,GAAG,CACvBH,IAAI,CAACI,KAAK,CAACL,kBAAkB,GAAG,EAAE,CAAC,EACnCA,kBAAkB,GAAG,EAAE,CACxB,CAACM,GAAG,CAAEC,CAAC,IAAK;IACX,OAAOA,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACX,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtC,CAAC,CAAC;EACF,MAAMY,sBAAsB,GAAG,GAAGN,KAAK,IAAIC,OAAO,EAAE;EAEpD,OAAO,GAAGL,eAAe,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAGU,sBAAsB,EAAE;AACvE","ignoreList":[]}